@page "/identifyJob"

@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using HR_Application.Models

@inject OracleDataService OracleDataService
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
    <MudText Typo="Typo.h6" Class="mb-6">Identify Job Description</MudText>
    <MudPaper Class="pa-6" Elevation="3">

        <EditForm Model="@model" OnValidSubmit="IdentifyJobs">
        <DataAnnotationsValidator/>
       
            <MudGrid>
                <MudItem xs="12" md="12">
                    <MudTextField T="string" Label="Job ID" @bind-Value="model.JobId" Required="true" RequiredError="Job ID is required!" />
                </MudItem>
                
                <MudItem xs="12" Class="mt-6 d-flex justify-end">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" ButtonType="ButtonType.Submit">Identify Job</MudButton>
                </MudItem>

            </MudGrid>

      

            @if (hasSearched)
            {
                @if (!string.IsNullOrEmpty(JobTitle))
                {
                    <MudItem xs="12" Class="my-4">
                        <MudAlert Severity="Severity.Success" Elevation="2">
                            Job Description Found for @model.JobId: <strong>@JobTitle</strong>
                        </MudAlert>
                    </MudItem>
                }
                else
                {
                    <MudItem xs="12" Class="my-4">
                        <MudAlert Severity="Severity.Error" Elevation="2">
                            No job found with ID: <code>@model.JobId</code>
                        </MudAlert>
                    </MudItem>
                }
            }

        </EditForm>

    </MudPaper>
</MudContainer>

@code {
    bool success;
    string[] errors = { };
    MudForm? form;
    public string? JobTitle { get; set; }
    private bool hasSearched = false;
    private JobSearchModel model = new();

    private async Task IdentifyJobs ()
    {

        try
        {
            JobTitle = await OracleDataService.IdentifyJobs(model.JobId!);
            hasSearched = true;

            if (string.IsNullOrEmpty(JobTitle))
            {
                Snackbar.Add("No job found with the specified ID", Severity.Warning);
            }
            else
            {
                Snackbar.Add("Job identified successfully", Severity.Success);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error identifying job: {ex.Message}", Severity.Error);
        }
    }
    
           
    public class JobSearchModel
    {
        [Required(ErrorMessage = "Job ID is required")]
        public string? JobId { get; set; }
    }


}
